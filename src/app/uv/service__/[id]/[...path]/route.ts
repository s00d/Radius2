import { NextRequest, NextResponse } from 'next/server'

export async function GET(
  request: NextRequest,
  { params }: { params: { id: string, path: string[] } }
) {
  const { id, path } = params

  console.log('üîß UV-Service Route: Request for ID:', id, 'Path:', path)

  // –ü–æ–ª—É—á–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—É—é —á–∞—Å—Ç—å
  const originalUrl = request.url
  const urlObj = new URL(originalUrl)
  const pathname = urlObj.pathname
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∞—Å—Ç—å –ø–æ—Å–ª–µ /uv/service/proxy1/
  const servicePrefix = `/uv/service/${id}/`
  const encodedPath = pathname.substring(servicePrefix.length)
  
  console.log('üîß UV-Service Route: Original pathname:', pathname)
  console.log('üîß UV-Service Route: Encoded path:', encodedPath)

  // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ bare —Å–µ—Ä–≤–µ—Ä
  const bareUrl = `/api/bare/${id}/`
  const targetUrl = bareUrl + encodedPath

  console.log('üîß UV-Service Route: Redirecting to:', targetUrl)

  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ bare —Å–µ—Ä–≤–µ—Ä
  const baseUrl = urlObj.origin
  const redirectUrl = baseUrl + targetUrl

  console.log('üîß UV-Service Route: Full redirect URL:', redirectUrl)

  return NextResponse.redirect(redirectUrl)
}
